group 'testcase'
version '0.1'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

jar {
    baseName = 'library'
}

task buildDocker(type: Docker, dependsOn: build) {
    push = false
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

task dockerUp(type: Exec) {
    dependsOn 'clean'
    dependsOn 'build'
    dependsOn 'buildDocker'
    tasks.findByName('build').mustRunAfter 'clean'
    tasks.findByName('buildDocker').mustRunAfter 'build'
    commandLine 'docker-compose', 'up'
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.1'
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile "org.springframework.boot:spring-boot-starter-jetty"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile "org.springframework.boot:spring-boot-starter-data-rest"
    compile "org.springframework.boot:spring-boot-starter-thymeleaf"
    compile "org.springframework.boot:spring-boot-starter-security"

    compile "ch.qos.logback:logback-classic"
    compile "ch.qos.logback:logback-core"
    compile "org.slf4j:slf4j-api"
    compile "org.projectlombok:lombok"
    compile "org.postgresql:postgresql:42.0.0"

    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile "junit:junit"
    testCompile "org.testcontainers:postgresql:1.1.9"
}
